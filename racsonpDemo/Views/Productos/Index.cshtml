@using racsonpDemo.Extensions
@using racsonpDemo.ViewModels
@model IEnumerable<racsonpDemo.Models.Entities.Producto>

@{
    ViewBag.Title = "Productos";
    var queryOptions = (QueryOptions)ViewBag.QueryOptions;

}




@*@section Scripts {
        <script>
    function ViewModel(departamentos) {
    var self = this;
    self.departamentos = departamentos;
    };
    var viewModel = new ViewModel(@Html.HtmlConvertToJson(Model));
    ko.applyBindings(viewModel);
        </script>
    }*@
<h2>Productos</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.BuildSortableLink("Producto", "Index", "Nombre", queryOptions)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Precio)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Tienda)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Precio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tienda)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {id = item.Id}) |
                @Html.ActionLink("Details", "Details", new {id = item.Id}) |
                @Html.ActionLink("Delete", "Delete", new {id = item.Id})
            </td>
        </tr>
    }

</table>


@Html.BuildNextPreviousLinks(queryOptions, "Index")
