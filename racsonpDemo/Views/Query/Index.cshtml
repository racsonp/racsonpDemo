@model racsonpDemo.Models.SqlBox
@using System.Data;
@using racsonpDemo.Extensions

@{
    ViewBag.Title = "SQL QUERY BOX";

}



<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">SQL BOX .NET</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Querry Composer
            </div>

            <div class="panel-body">

                @*@using (Html.BeginForm())
                    {*@



                <form role="form" method="post" action="/Query/Consulta">


                    @*@using (Html.BeginForm("Consulta", "Query", FormMethod.Get,
                            new {data_bind = "submit: validateAndSave"}))
                        {*@
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label>SQL:</label>
                        @*<textarea class="form-control" rows="5">@Model.Query</textarea>*@

                        @*@Html.EditorFor(model => model.Query, new { htmlAttributes = new { @class = "form-control" } })*@

                        @Html.EditorFor(model => model.Query, new
                                                        {
                                                            htmlAttributes =
                                                                new { @class = "form-control", data_bind = "value: sqlBox.query" }
                                                        })

                        @Html.ValidationMessageFor(model => model.Query, "", new { @class = "text-danger" })

                        <br />


                        <div class="alert alert-warning alert-dismissible" role="alert">
                            <button type="button" class="close" data-dismiss="alert">
                                <span aria-hidden="true">&times;</span>
                                <span class="sr-only">Close</span>
                            </button>
                             Tip: You can test query with:
                            <p class="help-block">  SELECT Id, Nombre, Precio, Tienda FROM Producto </p>
                                     OR
                            <p class="help-block"> SELECT Id, FirstName, LastName, Biography FROM Agent </p>
                        </div>


                       

                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-6">
                                    @*<form role="form">*@
                                    @*<div class="form-group">
                                            <label>Rows</label>
                                            <input class="form-control" id="disabledInput" type="text" placeholder="ALL" disabled>
                                            <p class="help-block">Apply a SELECT TOP N.</p>
                                        </div>*@


                                    <div class="form-group">
                                        <label>Format</label>

                                       
                                           
                                        <select class="form-control" disabled >
                                            <option>HTML</option>
                                        </select>
                                      

                                        @*@Html.DropDownListFor(model => model.Format,
                                                new SelectList(ViewBag.Active, "Value", "Text"),
                                                "Select status",
                                                new { @class = "form-control" })*@
                                    </div>



                                    <div class="form-group">
                                        @*<div class="col-md-offset-2 col-md-10" data-bind="visible: !sending()">*@
                                        <div data-bind="visible: !sending()">
                                            <button type="submit" name="tipo" value="Consulta">Run</button>
                                            @*<button type="submit" name="tipo" value="Export">Export</button>*@

                                            @*<input type="submit" name="Consulta" value="Consulta" class="btn btn-default" />*@


                                            @*<input type="submit" name="tipo" value="Consulta" class="btn btn-default" />
                                            <input type="submit" name="tipo" value="Export" class="btn btn-default" />*@
                                        </div>
                                        <div class="progress" data-bind="visible: sending">
                                            <div class="progress-bar progress-bar-info progress-bar-striped active"
                                                 role="progressbar" aria-valuenow="100"
                                                 aria-valuemin="0" aria-valuemax="100"
                                                 style="width: 100%">
                                                <span class="sr-only"></span>
                                            </div>
                                        </div>
                                    </div>



                                    @*@Html.ActionLink("Excel", "ExportExcel", new {}, new {@class = "btn btn-default"})
                                        @Html.ActionLink("CSV", "ExportCsv", new {}, new {@class = "btn btn-default"})*@

                                    @*<button type="submit" class="btn btn-default">TESTc</button>*@

                                    @*</form>*@
                                </div>
                            </div>

                        </div>

                    </div>
                    @*}*@
                </form>
            </div>
        </div>
    </div>

</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval",
                "/Scripts/ViewModels/SqlBoxViewModel.js", "/Scripts/knockout-3.2.0.js")



    <script>
        var viewModel = new SqlBoxViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);


     

    </script>


}
























